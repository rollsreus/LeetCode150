class Solution {
public:
      map<char,int> mp;
    int lengthOfLongestSubstring(string s) {
        int n =s.length();
        string ans="";
        int k=0;
        for(int i=0;i<n;i++){
            if(mp.find(s[i])==mp.end()){
                  ans+=s[i];
                  mp[s[i]]=i;
                  cout<<1<<endl;
            }
            else{
                cout<<2<<endl;
                int t=0;
                for(auto j : ans){
                    t++;
                    if(j!=s[i])
                     {
                        mp.erase(j);
                     }
                     else{                    
                        ans=ans.substr(t,ans.length()-t);
                        ans+=j;
                        break;
                     }
                }
            }
            cout<<ans<<endl;
            k= k > ans.length() ? k :ans.length();
        }
        return k;
    }
};
