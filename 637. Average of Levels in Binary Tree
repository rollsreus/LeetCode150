/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*> q;
        vector<double> ans;
        int n =1;
        
        q.push(root);
         int m=0;
         double sum=0;
         int count=1;
         while(!q.empty()){
            TreeNode *  t= q.front();
            q.pop();
            sum+=t->val;
            n--;
            if(t->right){
                q.push(t->right);
                m++;
            }
            if(t->left){
                q.push(t->left);
                m++;
            }
            if(!n)
            {
                ans.push_back(sum/count);
                count=m;
                 sum=0;
                 n=m;
                 m=0;
            }
         }
         return ans;
    }
};
