/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>v;
    void solve(TreeNode* root){
        if(!root)
        return;
        solve(root->left);
        v.push_back(root->val);
        solve(root->right);
    }
    bool isValidBST(TreeNode* root) {
        v={};
        solve(root);
       vector<int> t = v;
       sort(t.begin(),t.end());
       set<int> st;
       for(int i=0;i<v.size();i++){
        st.insert(v[i]);
         if(t[i]!=v[i])
         return false;

       } 
       if(st.size()!=v.size())
       return false;

       return true;
    }
};
